# R Package Name & Version
R_PKGNAME = OpenABMCovid19
VERSION		= 0.3

ifeq ($(OS),Windows_NT)
	R_BIN_PKG_EXT=zip
# Fix a problem where .libPaths() doesn't include the path in My Documents
# on Windows. On Windows the HOME variable is unset (empty), but Rtools'
# sh.exe set HOME to /home/${USER}. We can manually set this to an empty
# variable to fix this. On Unix, this has no affect because we're setting
# HOME to itself.
# https://community.rstudio.com/t/rstudio-startup-missing-libpaths/22122/6
	R_ENV=HOME=
else
	R_BIN_PKG_EXT=tgz
	R_ENV=
endif



# Temporary directory:
#
# Files generated using the '>' stdout redirection (e.g. sed -e STUFF.. > out)
# always update the timestamp of the output file, even when the command failed
# (e.g. because of a syntax error). This breaks make's dependency checking. As
# a workaround, we can output files to this temporary dir and move them if the
# operation was successful.
#
# We also also this directory for storing intermediate files created by R CMD.
TMPDIR = $(R_PKGNAME).tmp
ALL_OUTPUT = $(TMPDIR)



#------------------------------------------------------------------------------
# Target:        Rswig
# Dependencies:  none
# Output:        C and R source code file generated by SWIG
#------------------------------------------------------------------------------
SWIG_SRC = src/covid19.i \
	src/model_utils.i src/network_utils.i src/params_utils.i src/constant.h \
	src/demographics.h src/disease.h src/doctor.h src/hospital.h src/individual.h \
	src/input.h src/interventions.h src/list.h src/model.h src/network.h \
	src/nurse.h src/params.h src/structure.h src/utilities.h src/ward.h
SWIG_COUT = src/covid19_wrap_R.c
SWIG_ROUT = R/$(R_PKGNAME).R

$(SWIG_COUT): $(SWIG_SRC)
	swig -r -package $(R_PKGNAME) -Isrc -o $(SWIG_COUT) -outdir R src/covid19.i
# edit generated C source to mute R check note.
	sed -i 's/R_registerRoutines/R_useDynamicSymbols(dll,0);R_registerRoutines/' $(SWIG_COUT)
$(SWIG_ROUT): $(SWIG_COUT)
# edit generated src lines are cause R check warnings.
	sed -i 's/.Call("R_SWIG_debug_getCallbackFunctionData"/.Call("R_SWIG_debug_getCallbackFunctionData", PACKAGE="OpenABMCovid19"/' $(SWIG_ROUT)
	sed -i 's/.Call("R_SWIG_R_pushCallbackFunctionData"/.Call("R_SWIG_R_pushCallbackFunctionData", PACKAGE="OpenABMCovid19"/' $(SWIG_ROUT)
# edit generated src that causes errors like: "p_char" is not a defined class
	sed -i 's/ans <- new("_p_char"/#ans <- new("_p_char"/' $(SWIG_ROUT)
ALL_OUTPUT += $(SWIG_COUT) $(SWIG_ROUT)



#------------------------------------------------------------------------------
# Target:        Rman
# Dependencies:  Rswig
# Output:        Rd documentation files generated by Roxygen2
#------------------------------------------------------------------------------
R_SRC= $(SWIG_ROUT) \
  R/Model.R \
  R/Network.R \
  R/OpenABMCovid19.R \
  R/Parameters.R \
  R/Simulation.R \
  R/util.R
ROXYGEN_OUT = \
  man/AgeGroupEnum.Rd \
  man/Agent.Rd \
  man/COVID19IBM.Rd \
  man/Environment.Rd \
  man/Model.Rd \
  man/Network.Rd \
  man/NETWORK_CONSTRUCTIONS.Rd \
  man/Parameters.Rd \
  man/SAFE_UPDATE_PARAMS.Rd \
  man/Simulation.Rd
ROXYGEN_CMD = $(R_ENV) R -e 'devtools::document()'

man/Parameters.Rd: $(R_SRC)
	$(ROXYGEN_CMD)
	touch $(ROXYGEN_OUT)

man/Network.Rd: man/Parameters.Rd

man/Model.Rd: man/Parameters.Rd

man/AgeGroupEnum.Rd: man/Parameters.Rd

man/SAFE_UPDATE_PARAMS.Rd: man/Parameters.Rd

man/NETWORK_CONSTRUCTIONS.Rd: man/Parameters.Rd

man/Environment.Rd: man/Parameters.Rd

man/Agent.Rd: man/Parameters.Rd

man/Simulation.Rd: man/Parameters.Rd

man/COVID19IBM.Rd: man/Parameters.Rd


ALL_OUTPUT += $(ROXYGEN_OUT)



#------------------------------------------------------------------------------
# Target:        Rbuild
# Dependencies:  Rswig, Rman
# Output:        R source package file (.tar.gz)
#------------------------------------------------------------------------------
# R package content
R_SRC += tests/testthat.R tests/testthat/test-Model.R \
	tests/testthat/test-Parameters.R
C_SRC= $(SWIG_COUT) src/constant.c src/constant.h src/demographics.c \
	src/demographics.h src/disease.c src/disease.h src/doctor.c src/doctor.h \
	src/hospital.c src/hospital.h src/individual.c src/individual.h src/input.c \
	src/input.h src/interventions.c src/interventions.h src/list.c src/list.h \
	src/model.c src/model.h src/network.c src/network.h src/nurse.c \
	src/nurse.h src/params.c src/params.h src/structure.h src/utilities.c \
	src/utilities.h src/ward.c src/ward.h
DOCS= man/swig_methods.Rd $(ROXYGEN_OUT)
CONTENT = NAMESPACE DESCRIPTION LICENSE $(R_SRC) $(C_SRC) $(DOCS)

# Build R source package
R_SRC_PKG = $(R_PKGNAME)_$(VERSION).tar.gz
$(R_SRC_PKG): .Rbuildignore $(CONTENT)
	$(R_ENV) R CMD build .
ALL_OUTPUT += $(R_SRC_PKG)



#------------------------------------------------------------------------------
# Target:        Rbuild
# Dependencies:  Rswig, Rman
# Output:        R source package file (.tar.gz)
#------------------------------------------------------------------------------
R_BIN_PKG=$(R_PKGNAME)_$(VERSION).$(R_BIN_PKG_EXT)
$(R_BIN_PKG): $(R_SRC_PKG)
	[ -d $(TMPDIR)/Rinstall ] || mkdir -p $(TMPDIR)/Rinstall
	$(R_ENV) R CMD INSTALL --library=$(TMPDIR)/Rinstall --build $(R_SRC_PKG)
ALL_OUTPUT += $(R_BIN_PKG)



#------------------------------------------------------------------------------
# Alias target (Phony) for convenience
#------------------------------------------------------------------------------
Rswig: $(SWIG_COUT) $(SWIG_ROUT)

Rman: $(ROXYGEN_OUT)

Rbuild: $(R_SRC_PKG)

Rinstall: $(R_BIN_PKG)

Rcheck: $(R_SRC_PKG)
	[ -d $(TMPDIR)/Rcheck ] || mkdir -p $(TMPDIR)/Rcheck
	$(R_ENV) R CMD check --output=$(TMPDIR)/Rcheck $(R_SRC_PKG)



#------------------------------------------------------------------------------
# Cleaning
#------------------------------------------------------------------------------
clean:
	rm -fr $(ALL_OUTPUT) src/*.o src/*.dll

dry_clean:
	@echo '`make clean` will run:'
	@echo 'rm -fr $(ALL_OUTPUT) src/*.o src/*.dll'

.PHONY: clean dry_clean Rswig Rman Rbuild Rcheck Rinstall
